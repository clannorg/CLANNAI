// GAA Tagging System Types
// Based on the Developer Guide specifications

export type ActionType = 
  | 'Throw-up'
  | 'Turnover' 
  | 'Kickout' 
  | 'Kick-in' 
  | 'Shot' 
  | 'Foul'
  | 'Yellow Card' 
  | 'Black Card' 
  | 'Red Card'
  | 'Half Time Whistle'
  | 'Full Time Whistle';

export type OutcomeType = 
  | 'Won' 
  | 'Lost' 
  | 'N/A'
  // Shot-specific outcomes
  | '1Point'   // 1 point scored
  | '2Point'   // 2 points scored  
  | 'Goal'     // 3 points scored (under the bar) 
  | 'Wide'     // Shot missed (goes wide)
  | 'Saved'    // Shot blocked/saved by goalkeeper
  // Foul-specific outcomes  
  | 'Awarded To'  // Foul awarded to selected team

export type PlayType = 
  | 'Turnover' 
  | 'Shot' 
  | 'Free' 
  | 'Pause'
  | '1PT' 
  | '3PT' 
  | 'Wide';

export type TeamType = 'red' | 'blue';

export interface TeamInfo {
  id: string;
  name: string;
  color: TeamType;
  score: number;
}

export interface Event {
  id: string;
  time: number; // seconds
  team: TeamType;
  action: ActionType;
  outcome: OutcomeType;
  autoGenerated?: boolean;
  validated: boolean;
}

export interface PartialEvent {
  time?: number;
  team?: TeamType;
  action?: ActionType;
  outcome?: OutcomeType;
}

export interface ValidationError {
  type: 'possession' | 'time' | 'sequence' | 'action';
  message: string;
  suggestions: string[];
}

export interface ValidationResult {
  valid: boolean;
  errors: ValidationError[];
  autoCorrections?: PartialEvent[];
}

export interface VideoState {
  currentTime: number;
  duration: number;
  isPlaying: boolean;
  isLoaded: boolean;
}

// Match Time Markers Progress - tracks the required events for video analysis
export interface MatchTimeMarkersProgress {
  firstHalfThrowUp: { completed: boolean; time?: number; eventId?: string };
  halfTimeWhistle: { completed: boolean; time?: number; eventId?: string };
  secondHalfThrowUp: { completed: boolean; time?: number; eventId?: string };
  fullTimeWhistle: { completed: boolean; time?: number; eventId?: string };
}

export interface MatchTimeMarkers {
  firstHalfStart: number;
  halfTime: number;
  secondHalfStart: number;
  fullTime: number;
}

export interface MatchState {
  // Match Information
  matchId: string;
  teams: {
    red: TeamInfo;
    blue: TeamInfo;
  };
  
  // Match Period
  isSecondHalf: boolean;
  
  // Current Match Status
  currentTime: number; // seconds
  currentScore: { red: number; blue: number };
  currentPossession: TeamType | null;
  playerCounts: { red: number; blue: number };
  
  // Tagging State
  activeTag: PartialEvent | null;
  tagHistory: Event[];
  validationErrors: ValidationError[];
  
  // Match Time Markers Progress
  matchTimeMarkersProgress: MatchTimeMarkersProgress;
  
  // UI State
  videoState: VideoState;
  uiMode: 'live' | 'review' | 'analysis';
}

// Event creation helpers
export interface EventCreateOptions {
  time: number;
  team: TeamType;
  action: ActionType;
  outcome?: OutcomeType;
  autoGenerated?: boolean;
}

export interface TaggingContextOptions {
  enabledActions: ActionType[];
  suggestedTeam: TeamType | null;
  autoFillTime: boolean;
  showValidationWarnings: boolean;
} 